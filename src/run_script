#!/usr/bin/env python

"""
This is a run_script example that run a program call "prog.exe" 

take in as input a list of varname and value and and return in stdout (the terminal screen) a list of covered lines

e.g.,
./testscript "x 0, y 1, z 0"   #this represent the configuration x = 0 , y = 1 z = 0
l3
l4
l7

"""
import argparse
import os.path
import vu_common as CM

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("inputs", help="input configurations")

    args = parser.parse_args()
    inputs = args.inputs.strip()  #  "x 0, y 1, z 0"
    parts = [p.split() for p in inputs.split(",")]
    varnames,varvals = zip(*parts)
    assert len(varnames) == len(varvals)

    prog = os.path.abspath("prog.exe")  
    prog_inp = ' '.join(varvals) #"0 1 0"
    prog_out = "/var/tmp/tvn.out"
    cmd = "{} {} > {}".format(prog,prog_inp,prog_out)
    try:
        _,rs_err = CM.vcmd(cmd)
        assert len(rs_err) == 0, rs_err
    except:
        print("cmd '{}' failed".format(cmd))

    #print '\n'.join(CM.iread_strip(prog_out))
    print prog_out
    

   
