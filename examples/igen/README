Some simple examples
- First, compile the file
$gcc ex.c -o ex.Linux.exe  #if running on Mac, change Linux to Darwin (note that Linux is the main testing platform for iGen)


Several methods to find intractions of ex.c

1. Using the DB
Simply run iGen given the program name, e.g., python -O igen.py "ex"

2. Using a runscript

1. Assume the program is compiled as ex.Linux.exe (if not, then edit run_script to change this)
2. Test that the example run_script works

$ ../examples/run_script "s 0, t 1, u 1, v 1, x 0, y 1, z 1"
/var/tmp/tvn.out

$ less /var/tmp/tvn.out
L2
L2a
L3
L4
L5

^^^ So this runscript is something (notice the formats of the input and of the output). So this script essentially takes a configuration string as input and outpus the coverage to a file and returns a string containing the location of that file.

Now igen.py takes as input a domain file and your runscript

domain_file: simply tells me how many variables in the configurations and their values. For boolean s,t,u,v,x,y and for z taking 5 values 0 1 2 3 4 then the dom_file looks like
s 0 1
...
y 0 1
z 0 1 2 3

3. You run igen.py as follow

python igen.py --dom_file ../examples/ex.dom -run_script ../examples/run_script "prog" --seed 3

where
* "progname" is just some string, e.g., "exam motiv", that I use to identify your program
* --benchmark N will run the N times , if you don't use this flag, it is equivalent to N=1, i.e., running 1 time
* --seed X, set seed to X to reproduce these results. If use with --benchmark then the first run is X, second run is X+1, .. X+N

you should see lots of outputs with the last line looks something like this

** done benchmark 'progname', 3 runs, seed 0.0, time 6.63573384285, results in '/var/tmp/tnguyen_bm_DuIWC'


In short, try to run this script on your program with some specific seed and make sure you get the same gen N configs at the end 


***IMPORTANT: each time the script is run, it creates a temporary dir and save all results there (e.g., the dir '/var/tmp/yourusername_bmWgPxCP' above). SAVE this entire directory for future analysis. Of course if the run is not successfull, then you should delete the bad directory.




